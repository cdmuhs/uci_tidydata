secret = "6eeb85e434dd1e33562ef80c6a036b5a98baf857")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("cdm_test_r",
key = "1680f72f80266eb4238c",
secret = "6eeb85e434dd1e33562ef80c6a036b5a98baf857")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
key = "1680f72f80266eb4238c",
secret = "6eeb85e434dd1e33562ef80c6a036b5a98baf857")
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "1680f72f80266eb4238c",
secret = "6eeb85e434dd1e33562ef80c6a036b5a98baf857")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
library(httr)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- GET(url)
content2 <- content(html, as = "text") # get content from webpage
parsed_html <- htmlParse(content2, asText = T) # parse text
??htmlParse
content2
library(XML)
parsed_html <- htmlParse(content2, asText = T) # parse text
parsed_html
content2
class(content2)
class(parsed_html)
my.table<- readHTMLTable(parsed_html,
stringsAsFactors = FALSE)
mytable<- readHTMLTable(parsed_html,
stringsAsFactors = FALSE)
class(mytable)
mytable
mytable<- readHTMLTable(parsed_html,
stringsAsFactors = FALSE)
mytable<- readHTMLTable(content2,
stringsAsFactors = FALSE)
parsed_html <- htmlParse(content2, asText = T) # parse text
parsed_html
parsed_html[[100]]
parsed_html[[100]]
head(parsed_html)
head(parsed_html)
head(content2)
content2[[2]]
content2[[1]]
content2[[1]][[1]]
mydata = readLines("http://biostat.jhsph.edu/~jleek/contact.html")
mydata
str(mydata)
?nchar
mydata[[10]]
myvector = c(mydata[[10]], mydata[[20]], mydata[[30]], mydata[[100]])
nchar(myvector)
mydata = readLines("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
mydata
mydata = read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
?read.table
mydata = read.delim("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
mydata
head(mydata)
??read.table
library(readr)
mydata = read_table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
head(mydata)
mydata = read.delim("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
head(mydata)
?read.fwf
mydata = read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
widths = c(9, 14, 18, 22, 27, 31, 35, 40, 44, 48, 53, 57),
skip = 2)
head(mydata)
mydata = read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
widths = c(9, -5, 14, 18, 22, 27, 31, 35, 40, 44, 48, 53, 57),
skip = 2)
head(mydata)
mydata = read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
widths = c(9, 14, 18, 22, 27, 31, 35, 40, 44, 48, 53, 57),
skip = 2)
head(mydata)
library(readr)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
widths = c(9, 14, 18, 22, 27, 31, 35, 40, 44, 48, 53, 57),
skip = 4)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
widths = c(9, -5, 4)
skip = 4)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
widths = c(9, -5, 4),
skip = 4)
?read_fwf
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
col_positions = c(9, -5, 4),
skip = 4)
head(mydata)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths = c(9, -5, 4),
skip = 4)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(9, -5, 4)),
skip = 4)
head(mydata)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(9, 5, 4)),
skip = 4)
head(mydata)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(9, 9, 4)),
skip = 4)
head(mydata)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(9, 10, 4)),
skip = 4)
head(mydata)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(9, 10, 4, 9)),
skip = 4)
head(mydata)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(9, 10, 4, 9, 4)),
skip = 4)
head(mydata)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(9, 10, 4, 9, 4, 9, 4, 9, 4, 9, 4)),
skip = 4)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(9, 10, 4, 9, 4, 9, 4, 9, 4)),
skip = 4)
head(mydata)
mydata = read_fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",
fwf_widths(c(10, 9, 4, 9, 4, 9, 4, 9, 4)),
skip = 4)
head(mydata)
mydata %>%
select(X4) %>%
summarize(sum = sum())
mydata %>%
select(X4) %>%
summarize(sum = sum(X4))
swirl()
library(swirl)
swirl()
"install_course_github("JMF47", "swirl_regex", multi=T)"
install_course_github("JMF47", "swirl_regex", multi=T)
swirl()
library(stringr)
str_extract("windows", "win")
"[Aa]"
Z <- "[0-9]"
Z <- "[^A-Z]"
Z <- "[e3]"
Z <- "[l][e3][t]"
Z <- "[e3][e3]"
Z <- "l[e3][e3]t"
Z == "leet"
swirl()
Z <- "[Gg][eorge]"
Z <- "^[Gg][eorge]"
Z <- "^[George]"
Z <- "^[george]"
Z <- "^[eorge]"
Z <- "[Gg][eorge]^"
info()
?(library = "stringr")
?library = "stringr"
help(library = "stringr")
Z <- "^[eorge]"
Z <- ^"[eorge]"
Z <- "^[george]"
Z <- "^[george]"
Z <- "^[Ggeorge]"
Z <- "^[Gg]"
Z <- "^[Gg][eorge]"
info()
skip()
Z <- "[Bb]ush$"
Z <- "^[Gg]eorge.[Bb]ush"
Z <- "[Gg]eorge.[Bb]ush"
Z <- "[Gg]eorge.[Bb]ush$"
Z <- "^[Gg]eorge.[Bb]ush$"
"A[A-Z]{3, 5}E"
"A[A-Z]{3,5}?E"
swirl()
"A[A-Z]{3,5}?E"
"A[A-Z]{3,5}*E"
swirl()
skip()
Z <- "^(Somewhere) (Rainbow)$"
Z <- "^(Somewhere) .* (Rainbow)$"
skip()
"Lo(r|a|d)d"
Z<-"Lo(r|a|d)d"
skip()
library(tidyverse)
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
?strsplit
mylist = strsplit(names(mydata), "wgtp")
mylist[153]
mylist[123]
mylist
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
cols(
X1 = col_character(),
X2 = col_integer(),
X3 = col_character(),
X4 = col_character(),
X5 = col_character(),
X6 = col_character(),
X7 = col_character(),
X8 = col_character(),
X9 = col_character(),
X10 = col_character()
), col_names = F)
View(mydata)
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
head(mydata)
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5)
View(mydata)
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 4)
mydata %>%
gdp = gsub(X5, ",", "")
gdp = gsub(mydata$X5, ",", "")
?gsub
gdp = gsub(x = mydata$X5, ",", "")
summary(gdp)
summary(as.numeric(gdp))
mean(as.numeric(gdp), na.rm = T)
gdp
?read_csv
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 4,
nmax = 221)
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 4,
n_max = 221)
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 4,
n_max = 221,
na = c(NA, ".."))
mydata = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 4,
n_max = 215,
na = c(NA, ".."))
mydata$X5
summary(mydata$X5)
mean(mydata$X5)
mean(mydata$X5, na.rm = TRUE)
countryNames = mydata$X4
grep("^United", countryNames)
grep("^United", countryNames, value = T)
gdp = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
cols(
X1 = col_character(),
X2 = col_integer(),
X3 = col_character(),
X4 = col_character(),
X5 = col_character(),
X6 = col_character(),
X7 = col_character(),
X8 = col_character(),
X9 = col_character(),
X10 = col_character()
), col_names = F)
gdp = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
skip = 5,
cols(
X1 = col_character(),
X2 = col_integer(),
X3 = col_character(),
X4 = col_character(),
X5 = col_character(),
X6 = col_character(),
X7 = col_character(),
X8 = col_character(),
X9 = col_character(),
X10 = col_character()
), col_names = F, n_max = 215,
na = c(NA, ".."))
View(gdp)
View(mydata)
ed = read_csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
View(ed)
colnames(mydata)[1:2] = c("country_code", "gdp_rank")
colnames(ed)[1] = "country_code"
gdp_ed <- inner_join(gdp, ed, by = "country_code") %>%
arrange(desc(gdp_rank))
gdp = gdp[complete.cases(gdp$gdp_rank), ]
gdp = mydata[complete.cases(mydata$gdp_rank), ]
gdp_ed <- inner_join(gdp, ed, by = "country_code") %>%
arrange(desc(gdp_rank))
View(gdp_ed)
grep("June", gdp_ed$`Special Notes`, value = T)
grep("^[Ff]iscal + June", gdp_ed$`Special Notes`, value = T)
grep("^[Ff]iscal * June", gdp_ed$`Special Notes`, value = T)
myexpr = "^[Ff]iscal"
grep(myexpr, gdp_ed$`Special Notes`, value = T)
myexpr = "^[Ff]iscal year end: "
grep(myexpr, gdp_ed$`Special Notes`, value = T)
myexpr = "^[Ff]iscal year end: June"
grep(myexpr, gdp_ed$`Special Notes`, value = T)
myexpr = "^[Ff]iscal year end: June 30"
grep(myexpr, gdp_ed$`Special Notes`, value = T)
grep(myexpr, gdp_ed$`Special Notes`)
length(grep(myexpr, gdp_ed$`Special Notes`))
myexpr = "^[Ff]iscal *. June"
length(grep(myexpr, gdp_ed$`Special Notes`))
myexpr = "^[Ff]iscal .* June"
length(grep(myexpr, gdp_ed$`Special Notes`))
library("quantmod")
install.packages("quantmod")
library("quantmod")
amzn = getSymbols("AMZN", auto.assign = T)
amzn = getSymbols("AMZN", auto.assign = F)
sampleTimes = index(amzn)
sampleTimes
amzn
vignette(package = lubridate)
vignette(package = "lubridate")
sampleTimes
sample_times = ymd(sampleTimes)
library("lubridate")
sample_times = ymd(sampleTimes)
mysample %>% tbl_df(amzn) %>%
mutate(sample_times = ymd(sampleTimes)) %>%
filter(sample_times <  "2013-01-01",
sample_times >= "2012-01-01")
mysample = tbl_df(amzn) %>%
mutate(sample_times = ymd(sampleTimes)) %>%
filter(sample_times <  "2013-01-01",
sample_times >= "2012-01-01")
View(mysample)
View(AMZN)
nrow(mysample)
mysample %>%
mutate(day_of_week = wday(sample_times)) %>%
group_by(day_of_week) %>%
summarize(count = n())
mysample %>%
mutate(day_of_week = wday(sample_times))
mysample %>%
mutate(day_of_week = wday(sample_times)) %>%
select(sample_time, day_of_week)
mysample %>%
mutate(day_of_week = wday(sample_times)) %>%
select(sample_times, day_of_week)
mysample %>%
mutate(day_of_week = wday(sample_times, label = TRUE)) %>%
select(sample_times, day_of_week)
mysample %>%
mutate(day_of_week = wday(sample_times, label = TRUE)) %>%
select(sample_times, day_of_week) %>%
group_by(day_of_week) %>%
summarize(count = n())
nrow(mysample)
mysample %>%
mutate(day_of_week = wday(sample_times, label = TRUE)) %>%
select(sample_times, day_of_week) %>%
group_by(day_of_week) %>%
summarize(count = n()) # 47 mondays
data(mtcars)
mtcars
narrow <- mtcars[, c("cyl", "gear", "vs", "mpg")]
narrow
library(reshape2)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide1library(reshape2)
wide1 <- tidied <- dcast(narrow, cyl + gear ~ vs, max)
wide1
wide2 <- tidied <- dcast(narrow, cyl + vs ~ gear, max)
wide2
wide3 <- tidied <- dcast(narrow, gear + vs ~ cyl, max)
wide3
notverywide <- aggregate(mpg ~ gear + vs + cyl, data = narrow, max)
notverywide
untidy <- with(narrow, tapply(mpg, list(cyl, vs, gear), max))
untidy
setwd("Users/chisto/Dropbox/Data_Science/getting_and_cleaning_data/project/data")
setwd("~/Users/chisto/Dropbox/Data_Science/getting_and_cleaning_data/project/data")
setwd("~/Users/chisto/Dropbox/Data_Science/getting_and_cleaning_data/project/data")
setwd("~/Dropbox/Data_Science/getting_and_cleaning_data/project")
setwd("~/Dropbox/Data_Science/getting_and_cleaning_data/project")
getwd()
list.files("./data/")
list.files("./data/test/")
read.table("./data/test/subject_test.txt")
subject_test <- read.table("./data/test/subject_test.txt")
head(subject_test)
summary(subject_test)
x_test <- read.table("./data/test/X_test.txt")
y_test <- read.table("./data/test/y_test.txt")
View(x_test)
summary(y_test)
list.files("./data/test/")
vars <- read.table("./data/features.txt")
vars
?gsub
gsub(",", "_", vars)
vars
gsub(",", "_", vars$V2)
gsub("^[a-z*](", "_", vars$V2)
gsub("^[a-z*]", "_", vars$V2)
gsub("^[a-z+]", "_", vars$V2)
gsub("^[+a-z]", "_", vars$V2)
gsub("(", "_", vars$V2)
gsub("()", "_", vars$V2)
names(vars$V2)
vars$V2
colnames(x_test) <- vars$V2
head(x_test)
gsub("^t", "time_", vars$V2)
gsub("^f", "freq_", vars$V2)
dim(subject_test)
dim(x_test)
dim(y_test)
dim(vars)
subject_train <- read.table("./data/train/subject_test.txt")
subject_train <- read.table("./data/train/subject_train.txt")
x_train <- read.table("./data/train/X_train.txt")
y_test <- read.table("./data/train/y_train.txt")
subject_test <- read.table("./data/test/subject_test.txt")
x_test <- read.table("./data/test/X_test.txt")
y_test <- read.table("./data/test/y_test.txt")
subject_train <- read.table("./data/train/subject_train.txt")
x_train <- read.table("./data/train/X_train.txt")
y_test <- read.table("./data/train/y_train.txt")
dim(x_test)
dim(x_train)
subject_test <- read.table("./data/test/subject_test.txt")
x_test <- read.table("./data/test/X_test.txt")
dim(x_test)
y_test <- read.table("./data/test/y_test.txt")
dim(y_test)
subject_train <- read.table("./data/train/subject_train.txt")
x_train <- read.table("./data/train/X_train.txt")
y_train <- read.table("./data/train/y_train.txt")
summary(y_train)
names(y_train)
names(y_train) <- "activity_id"
y_test <- read.table("./data/test/y_test.txt")
y_train <- read.table("./data/train/y_train.txt")
y <- rbind(y_test, y_train)
x <- rbind(x_test, x_train)
head(subject_test)
s <- rbind(subject_test, subject_train)
colnames(s) <- "subject_id"
colnames(y) <- "activity_id"
mydata <- cbind(s, y, x)
View(mydata)
s <- rbind(subject_train, subject_test)
x <- rbind(x_train, x_test)
y <- rbind(y_train, y_test)
colnames(s) <- "subject_id"
colnames(y) <- "activity_id"
mydata <- cbind(s, y, x)
colnames(mydata)
features <- read.table("./data/features.txt")
colnames(x) <- features$V2
mydata <- cbind(s, y, x)
?grep
grep("mean", features$V2)
grep("mean", features$V2, value = T)
grep("mean()", features$V2, value = T)
grep("mean\(\)", features$V2, value = T)
grep("mean/(/)", features$V2, value = T)
grep("mean\(\)", features$V2, value = T)
grep("mean()", features$V2, value = T)
grep("mean()$", features$V2, value = T)
grep("mean[()]$", features$V2, value = T)
grep("mean\\(", features$V2, value = T)
grep("mean\\(\)", features$V2, value = T)
grep("mean\\(\\)", features$V2, value = T)
grep("mean\\(\\)$", features$V2, value = T)
features$V2
grep("(mean\\(\\)$)|(std\\(\\)$)", features$V2, value = T)
grep("(mean\\(\\)$)|(std\\(\\)$)", features$V2)
grep("(mean\\(\\))|(std\\(\\))", features$V2, value = T) # check regex first
grep("(mean\\(\\))|(std\\(\\))", features$V2)
position <- grep("(mean\\(\\))|(std\\(\\))", features$V2)
str(position)
grep("(mean\\(\\))|(std\\(\\))", features$V2)
mylist <- grep("(mean\\(\\))|(std\\(\\))", features$V2)
positions <- grep("(mean\\(\\))|(std\\(\\))", features$V2)
grep("(mean\\(\\))|(std\\(\\))", features$V2, value = T) # check result first
keyvars <- grep("(mean\\(\\))|(std\\(\\))", features$V2, value = T)
which(colnames(mydata) %in% keyvars)
colnames(mydata)
colnames(mydata)[1:2]
c(colnames(mydata)[1:2], keyvars )
id_keyvars <- c(colnames(mydata)[1:2], keyvars )
which(colnames(mydata) %in% id_keyvars)
col_num <- which(colnames(mydata) %in% id_keyvars)
keydata <- mydata[, sort(c(col_num, col_num - 1))]
dim(keydata)
head(keydata)
keydata <- mydata[, c(col_num)]
dim(keydata)
head(keydata)
